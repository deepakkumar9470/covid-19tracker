{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.js","components/ChartView/ChartView.js","components/CountryPicker/CountryPicker.js","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","index.js","App.module.css","images/covid19.png","components/ChartView/ChartView.module.css","components/CountryPicker/CountryPicker.module.css","components/NavBar/NavBar.module.css","components/Footer/Footer.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","modifiedData","console","log","fetchdailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","ChartView","useState","setdailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountriesData","setfetchedCountriesData","FormControl","formcontrol","NativeSelect","defaultValue","onChange","event","target","index","key","NavBar","href","Footer","class","App","state","handleCountryPickerChange","apiData","setState","this","myimage","src","coronaimage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.614ad1b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3yFaf\",\"card\":\"Cards_card__1lxu3\",\"infected\":\"Cards_infected__r0Cuz\",\"recovered\":\"Cards_recovered__2A30X\",\"deaths\":\"Cards_deaths__xCBtq\"};","import React from 'react';\r\nimport axios from 'axios';\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n const {data:{ confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeableUrl); \r\n        const modifiedData={confirmed,recovered,deaths,lastUpdate};\r\n         return modifiedData;\r\n    }catch(error){\r\n     console.log(error);\r\n    }\r\n    \r\n}\r\n\r\n\r\n// For Charts\r\nexport const fetchdailyData = async () => {\r\n    try{\r\n      const {data} = await axios.get(`${url}/daily`);\r\n      \r\n      const modifiedData= data.map((dailyData)=>({\r\n        confirmed:dailyData.confirmed.total,\r\n        deaths:dailyData.deaths.total,\r\n        date:dailyData.reportDate,\r\n      }));\r\n      return modifiedData;\r\n      \r\n    }catch(error){\r\n\r\n    }\r\n    \r\n}\r\n\r\n// For Countries Selection Picker\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n       const{data:{countries}} = await axios.get(`${url}/countries`);  \r\n    \r\n       return countries.map((country)=>country.name);\r\n      \r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n   \r\n}\r\n\r\n","import React from 'react'\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed,recovered,deaths,lastUpdate} }) => {\r\n if(!confirmed)\r\n {return \"Loading.....\";}\r\n  return ( \r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n            <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n            <CountUp start={0} end={confirmed.value} duration={3.5} separator=\",\"/>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n              <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={3.5} separator=\",\"/>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of recoveries from COVID-19 </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n              <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={3.5} separator=\",\"/>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n   </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import React,{useState ,useEffect} from 'react'\r\nimport {fetchdailyData} from '../../api';\r\nimport styles from './ChartView.module.css';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\n\r\nconst ChartView = ({data: {confirmed,recovered,deaths}, country}) => {\r\n  const [dailyData ,setdailyData] = useState([]);\r\n  \r\n\r\n  useEffect(()=>{\r\n     const fetchAPI= async()=>{\r\n         setdailyData(await fetchdailyData());\r\n     }  \r\n     \r\n      fetchAPI();\r\n   },[]);\r\n\r\n// For Charts Line & Bar\r\n\r\nconst lineChart= (\r\n  dailyData.length?\r\n  (<Line \r\n    data= {{\r\n      labels: dailyData.map(({date})=>date),\r\n       \r\n      datasets:[{\r\n       data:dailyData.map(({confirmed})=>confirmed),\r\n       label:\"Infected\",\r\n       borderColor:\"#3333ff\",\r\n       fill:true,\r\n      } ,{\r\n        data:dailyData.map(({deaths})=>deaths),\r\n        label:\"Deaths\",\r\n        borderColor:\"red\",\r\n        backgroundColor:\"rgba(255,0,0,0.5)\",\r\n        fill:true,\r\n       }],\r\n     }}/>):null\r\n);\r\n\r\n// For Bar Charts\r\n// console.log(confirmed, recovered, deaths);\r\nconst barChart=(\r\n   confirmed?\r\n   (\r\n     <Bar\r\n      data= {{\r\n        labels:['Infected','Recovered','Deaths'],\r\n        datasets:[{\r\n          label:'People',\r\n          backgroundColor:[\r\n            'rgba(0,0,255,0.5)',\r\n            'rgba(0,255,0,0.5)',\r\n            'rgba(255,0,0,0.5)', \r\n          ],\r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n        }]\r\n      }}\r\n\r\n      options={{\r\n        legend: {display:false},\r\n        title:{display:true, text:`Current state is ${country}`},\r\n\r\n      }}\r\n    />\r\n    ) : null\r\n);\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n         {\r\n           country ? barChart :lineChart\r\n         }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartView;\r\n","import React,{useState, useEffect} from 'react';\r\nimport styles from './CountryPicker.module.css';\r\nimport {NativeSelect ,FormControl} from '@material-ui/core';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst[fetchedCountriesData,setfetchedCountriesData] = useState([]);\r\n\r\n\r\nuseEffect(()=>{\r\n  const fetchAPI= async ()=>{\r\n      setfetchedCountriesData(await fetchCountries());\r\n  } \r\n  fetchAPI();\r\n\r\n},[fetchedCountriesData]);\r\n// console.log(fetchedCountriesData);\r\n\r\n\r\n    return (\r\n          <FormControl className={styles.formcontrol}>\r\n            <NativeSelect defaultValue=\"\" onChange={(event)=>handleCountryChange(event.target.value)}>\r\n             <option value=\"\">Global</option>\r\n             {\r\n                 fetchedCountriesData.map((country,index)=>\r\n                  <option value={country} key={index}>{country}</option>\r\n                 )\r\n             }\r\n            </NativeSelect>\r\n          </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react'\r\nimport styles from './NavBar.module.css';\r\nconst NavBar = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-info pl-5 text-uppercase\">\r\n        <a className=\"navbar-brand\" href=\"https://www.mohfw.gov.in/\">COVID-19 Tracker</a>\r\n\r\n      </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport styles from './Footer.module.css';\r\nconst Footer = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n        <div class=\"card text-center mb-0\">\r\n        <div class=\"card-body head-div\">\r\n          <h5 class=\"card-title text-uppercase text-dark \">Copyrigth @2020 | All right Reserved</h5>\r\n        </div>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\nimport './App.module.css';\nimport styles from './App.module.css';\nimport coronaimage from './images/covid19.png';\nimport { fetchData } from './api';\nimport {Cards, ChartView,CountryPicker, NavBar ,Footer} from './components';\n class App extends Component {\n state={\n   data:{},\n   country:'', \n }\nasync componentDidMount(){\n  const apiData=await fetchData();\n  this.setState({data:apiData});\n  // console.log(apiData);\n}\n\nhandleCountryPickerChange= async (country)=>{\n  const apiData=await fetchData(country);\n  this.setState({data:apiData, country:country});\n  // console.log(apiData);\n}\n  render() {\n\n    const {data,country} = this.state;\n    return (\n      <div className={styles.container}>\n        <NavBar/>\n        <img className={styles.myimage} src={coronaimage} alt=\"COVID-19\"/>\n        \n        <Cards data={data}/>\n        \n        <CountryPicker handleCountryChange={this.handleCountryPickerChange}/>\n       \n        <ChartView data={data} country={country}/>\n        <Footer/>\n      </div>\n      \n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YamB\",\"myimage\":\"App_myimage__1_6h6\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChartView_container__3A7J1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__2FxQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavBar_container__3bubi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__Xdux7\"};"],"sourceRoot":""}